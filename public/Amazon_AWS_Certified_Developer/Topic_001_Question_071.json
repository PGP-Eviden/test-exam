{"title": "Topic 001 Question 071", "body": ["A developer is working on an existing application that uses Amazon DynamoDB as its data store. The DynamoDB table has the following attributes: partNumber (partition key), vendor (sort key), description, productFamily, and productType. When the developer analyzes the usage patterns, the developer notices that there are application modules that frequently look for a list of products based on the productFamily and productType attributes.", "", "The developer wants to make changes to the application to improve performance of the query operations.", "", "Which solution will meet these requirements?"], "options": ["Create a global secondary index (GSI) with productFamily as the partition key and productType as the sort key.", "Create a local secondary index (LSI) with productFamily as the partition key and productType as the sort key.", "Recreate the table. Add partNumber as the partition key and vendor as the sort key. During table creation, add a local secondary index (LSI) with productFamily as the partition key and productType as the sort key.", "Update the queries to use Scan operations with productFamily as the partition key and productType as the sort key."], "answer": "A"}