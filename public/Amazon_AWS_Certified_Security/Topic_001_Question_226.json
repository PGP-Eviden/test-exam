{"title": "Topic 001 Question 226", "body": ["A recent security audit identified that a company's application team injects database credentials into the environment variables of an AWS Fargate task. The company's security policy mandates that all sensitive data be encrypted at rest and in transit.", "Which combination of actions should the security team take to make the application compliant with the security policy? (Choose three.)", ""], "options": ["Store the credentials securely in a file in an Amazon S3 bucket with restricted access to the application team IAM role. Ask the application team to read the credentials from the S3 object instead.", "Create an AWS Secrets Manager secret and specify the key/value pairs to be stored in this secret.", "Modify the application to pull credentials from the AWS Secrets Manager secret instead of the environment variables.", "Add the following statement to the container instance IAM role policy: <img src=\"./AWS Certified Security - Specialty Exam \u2013 Free Exam Q&amp;As, Page 1 _ ExamTopics_files/0014200001.png\" class=\"in-exam-image\">", "Add the following statement to the task execution role policy: <img src=\"./AWS Certified Security - Specialty Exam \u2013 Free Exam Q&amp;As, Page 1 _ ExamTopics_files/0014200002.png\" class=\"in-exam-image\">", "Log in to the AWS Fargate instance, create a script to read the secret value from AWS Secrets Manager, and inject the environment variables. Ask the application team to redeploy the application."], "answer": "BCE"}