---
import Question from "../../components/Question.astro";

type QuestionInfo = {
  title: string;
  body: string[];
  options: string[];
  answer: number;
};

export async function getStaticPaths({ paginate }: any) {
  const allExams = ["AZ-104", "AZ-204", "Developer Associate", "Microsoft_SC-100"];
  const az104Questions = await Astro.glob<QuestionInfo>("../../../public/AZ-104/*.json");
  const az204Questions = await Astro.glob<QuestionInfo>("../../../public/AZ-204/*.json");
  const sc100Questions = await Astro.glob<QuestionInfo>("../../../public/Microsoft_SC-100/*.json");

  return allExams.map( (exam) => {
    const qs = exam === "AZ-104" ? az104Questions
      : exam === "AZ-204" ? az204Questions
      : exam === "Microsoft_SC-100" ? sc100Questions : az204Questions
    return paginate(qs, {
      pageSize: 10,
      params: { exam },
    });
  });
}

const page: QuestionInfo[] = Astro.props.page.data;
const { page: pageNumber, exam } = Astro.params;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro + TailwindCSS</title>
  </head>

  <body>
    <a href="/" class="bg-amber-400 py-2 px-4">Go back home</a>
    <header>
      <h1 class="text-4xl">
        {exam} page {pageNumber}
      </h1>
    </header>
    <section>
      {
        Array.isArray(page) &&
        page.map((question: QuestionInfo) => (
          <Question answer={question.answer}
            body={question.body}
            options={question.options}
            title={question.title}
          />
        ))
      }
    </section>
  </body>
</html>
